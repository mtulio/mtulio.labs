---

#AWS: https://docs.ansible.com/ansible/latest/collections/community/aws/elb_target_group_module.html
cloud_loadbalancer_targets:

  - name: "{{ cluster_state.infra_id }}-ig-default-pub-80"
    provider: aws
    protocol: tcp
    port: 80
    target_type: ip
    vpc_name: "{{ cluster_state.infra_id }}-vpc"
    health_check_protocol: tcp
    #health_check_path: /healthz
    #health_check_port: 31476
    #successful_response_codes: "200-399"
    health_check_interval: 10
    #health_check_timeout: 2
    healthy_threshold_count: 2
    unhealthy_threshold_count: 2
    state: present
    modify_targets: no
    tags: "{{ cluster_state.tags | d({}) }}"
    register_ec2:
      # ToDo: create a generic role to identify workers, like:
      # - openshift_node_role=worker
      # - node-role.kubernetes.io/worker=''
      - filters:
          "tag:Name": "{{ cluster_state.infra_id }}-worker-1"
        resource_type: ip
      - filters:
          "tag:Name": "{{ cluster_state.infra_id }}-worker-2"
        resource_type: ip
      - filters:
          "tag:Name": "{{ cluster_state.infra_id }}-worker-3"
        resource_type: ip

  - name: "{{ cluster_state.infra_id }}-ig-default-pub-443"
    provider: aws
    protocol: tcp
    port: 443
    target_type: ip
    vpc_name: "{{ cluster_state.infra_id }}-vpc"
    health_check_protocol: tcp
    #health_check_path: /healthz
    #health_check_port: 31476
    #successful_response_codes: "200-399"
    health_check_interval: 10
    #health_check_timeout: 2
    healthy_threshold_count: 2
    unhealthy_threshold_count: 2
    state: present
    modify_targets: no
    tags: "{{ cluster_state.tags | d({}) }}"
    register_ec2:
      # ToDo: create a generic role to identify workers, like:
      # - openshift_node_role=worker
      # - node-role.kubernetes.io/worker=''
      - filters:
          "tag:Name": "{{ cluster_state.infra_id }}-worker-1"
        resource_type: ip
      - filters:
          "tag:Name": "{{ cluster_state.infra_id }}-worker-2"
        resource_type: ip
      - filters:
          "tag:Name": "{{ cluster_state.infra_id }}-worker-3"
        resource_type: ip

# AWS: https://docs.ansible.com/ansible/latest/collections/community/aws/elb_network_lb_module.html
cloud_loadbalancers:
  - name: "{{ cluster_state.infra_id }}-ig-default-pub"
    openshift_id: public
    provider: aws
    type: network
    scheme: internet-facing
    state: present
    tags: "{{ cluster_state.tags | d({}) }}"
    #subnet_mappings:
    #subnets: []
    subnets_discovery: yes
    vpc_name: "{{ cluster_state.infra_id }}-vpc"
    subnets_names:
      - "{{ cluster_state.infra_id }}-net-public-use1-1a"
      - "{{ cluster_state.infra_id }}-net-public-use1-1b"
      - "{{ cluster_state.infra_id }}-net-public-use1-1c"
    cross_zone_load_balancing: yes
    ip_address_type: ipv4
    listeners:
      - Protocol: TCP
        Port: 80
        DefaultActions:
          - Type: forward
            TargetGroupName: "{{ cluster_state.infra_id }}-ig-default-pub-80"
      - Protocol: TCP
        Port: 443
        DefaultActions:
          - Type: forward
            TargetGroupName: "{{ cluster_state.infra_id }}-ig-default-pub-443"
    register_dns:
      - zone: "{{ cluster_state.zones.base }}"
        record: "*.apps.{{ cluster_state.zones.cluster }}"
        overwrite: yes
      - zone: "{{ cluster_state.zones.cluster }}"
        record: "*.apps.{{ cluster_state.zones.cluster }}"
        overwrite: yes
        private_zone: yes
