---
openshift_prefix: "{{ cluster_state.infra_id }}"
openshift_bootstrap_bucket: "{{ openshift_prefix }}-infra"

openshift_instance_type: "{{ controlplane_instance | d('m6i.xlarge') }}"
openshift_instance_profile: "{{ cluster_state.compute.iam_profile_bootstrap }}"
openshift_image_id: "{{ cluster_state.compute.image_id }}"
openshift_subnet_name: "{{ openshift_prefix }}-net-public-use1-1a"
openshift_security_groups:
  - "{{ openshift_prefix }}-bootstrap-sg"
  - "{{ openshift_prefix }}-controlplane-sg"
openshift_tags: "{{ cluster_state.tags }}"

openshift_userdata:
  config_source: "s3://{{ openshift_bootstrap_bucket }}/bootstrap.ign"

_def:
  name: "{{ openshift_prefix }}-bootstrap"
  detailed_monitoring: yes
  ebs_optimized: no
  image_id: "{{ openshift_image_id }}"
  instance_role: "{{ openshift_instance_profile }}"
  instance_type: "{{ openshift_instance_type }}"
  security_groups: "{{ openshift_security_groups }}"
  state: present
  tags: "{{ openshift_tags }}"
  termination_protection: no

  #volumes: []
  #vpc_subnet_id: "{{ openshift_subnet_id }}"
  vpc_subnet_name: "{{ openshift_subnet_name }}"
  wait: yes
  wait_timeout: 500

# https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_instance_module.html
compute_resources:
    # Module 'machine' options:
    # https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_instance_module.html
    - provider: aws
      type: machine
      name: "{{ _def.name }}"
      filters:
        tag:Name: "{{ _def.name }}"
        instance-state-name: running
      tags: "{% set x=cluster_state.tags.__setitem__('Name', _def.name ) %}{{ cluster_state.tags }}"
      detailed_monitoring: "{{ _def.detailed_monitoring }}"
      ebs_optimized: "{{ _def.ebs_optimized }}"
      image_id: "{{ _def.image_id }}"
      instance_type: "{{ _def.instance_type }}"
      security_groups: "{{ _def.security_groups }}"
      state: "{{ _def.state }}"

      termination_protection: "{{ _def.termination_protection }}"
      user_data: "{{ lookup('template', 'ocp-bootstrap-user-data.j2') |to_nice_json | string }}"
      volumes: "{{ _def.volumes | d([]) }}"
      vpc_subnet_name: "{{ _def.vpc_subnet_name }}"
      wait: "{{ _def.wait }}"
      wait_timeout: "{{ _def.wait_timeout }}"

      # Advanced IAM
      instance_role: "{{ _def.instance_role }}"
      # https://docs.openshift.com/container-platform/4.10/installing/installing_aws/installing-aws-user-infra.html#installation-aws-ami-stream-metadata_installing-aws-user-infra

      register_resources:
        - service: loadbalancer
          service_type: nlb
          resource_name: "{{ openshift_prefix }}-aint"
          resource_type: ip
          #resource_id: private_ip
        - service: loadbalancer
          service_type: nlb
          resource_name: "{{ openshift_prefix}}-aext"
          resource_type: ip
          #resource_id: private_ip
        - service: loadbalancer
          service_type: nlb
          resource_name: "{{ openshift_prefix }}-sint"
          resource_type: ip
          #resource_id: private_ip
