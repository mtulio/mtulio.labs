---

- name: Discovery VPC ID
  amazon.aws.ec2_vpc_net_info:
    filters:
      "tag:Name": "{{ target.vpc_name }}"
  when: target.vpc_name is defined
  register: vpc_info

- debug: var=vpc_info

- name: Set discovered VPC ID
  set_fact:
    vpc_id: "{{ vpc_info.vpcs[0].vpc_id }}"
  when:
    - target.vpc_name is defined
    - vpc_info.vpcs|length > 0

- name: Set VPC ID from config
  set_fact:
    vpc_id: "{{ target.vpc_id }}"
  when: target.vpc_id is defined

- name: Create target group
  community.aws.elb_target_group:
    state: present
    region: "{{ target.region | d(omit) }}"
    name: "{{ target.name }}"
    vpc_id: "{{ vpc_id }}"
    tags: "{{ target.tags | d(omit) }}"
    purge_tags: "{{ target.purge_tags | d(omit) }}"
    protocol: "{{ target.protocol }}"
    port: "{{ target.port }}"
    # Health Check
    health_check_protocol: "{{ target.health_check_protocol }}"
    health_check_path: "{{ target.health_check_path }}"
    health_check_port: "{{ target.health_check_port }}"
    successful_response_codes: "{{ target.successful_response_codes }}"
    health_check_interval: "{{ target.health_check_interval }}"
    health_check_timeout: "{{ target.health_check_timeout |d(omit) }}"
    healthy_threshold_count: "{{ target.healthy_threshold_count }}"
    unhealthy_threshold_count: "{{ target.unhealthy_threshold_count }}"
    # Targets
    target_type: "{{ target.target_type | d(omit) }}"
    modify_targets: "{{ target.modify_targets | d(omit) }}"
    tagets: "{{ target.tagets | d(omit) }}"
    # Config
    stickiness_enabled: "{{ target.stickiness_enabled | d(omit) }}"
    stickiness_app_cookie_duration: "{{ target.stickiness_app_cookie_duration | d(omit) }}"
    stickiness_app_cookie_name: "{{ target.stickiness_app_cookie_name | d(omit) }}"
    stickiness_lb_cookie_duration: "{{ target.stickiness_lb_cookie_duration | d(omit) }}"
    stickiness_type: "{{ target.stickiness_type | d(omit) }}"
    proxy_protocol_v2_enabled: "{{ target.proxy_protocol_v2_enabled | d(omit) }}"
    preserve_client_ip_enabled: "{{ target.preserve_client_ip_enabled | d(omit) }}"
    deregistration_delay_timeout: "{{ target.deregistration_delay_timeout | d(omit) }}"
  register: tg_out

- debug: var=tg_out
