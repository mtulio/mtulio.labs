AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy Proxy Instance.

Parameters:
  NamePrefix:
    AllowedPattern: ^([a-zA-Z][a-zA-Z0-9\-]{0,26})$
    MaxLength: 16
    MinLength: 1
    ConstraintDescription: Cluster name must be alphanumeric, start with a letter, and have a maximum of 27 characters.
    Description: A short, representative cluster name to use for host names and other identifying names.
    Type: String

  TemplatesBaseURL:
    Type: String
    Description: Choose 2 Subnets to create Load balancer and ASG

  VpcId:
    Description: VPC ID to associate the Carrier Gateway.
    Type: String
    AllowedPattern: ^(?:(?:vpc)(?:-[a-zA-Z0-9]+)?\b|(?:[0-9]{1,3}\.){3}[0-9]{1,3})$
    ConstraintDescription: VPC ID must be with valid name, starting with vpc-.*.

  VpcCidr:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-4]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-24.
    Default: 10.0.0.0/16
    Description: CIDR block for VPC.
    Type: String

  AmiId:
    Description: AMI ID to provision the EC2.
    Type: String
    AllowedPattern: ^(?:(?:ami)(?:-[a-zA-Z0-9]+)?\b|(?:[0-9]{1,3}\.){3}[0-9]{1,3})$
    ConstraintDescription: Subnet ID must be with valid name, starting with ami-.*.

  SubnetId:
    Description: Base64 user data to provision the EC2.
    Type: String

  InstanceType:
    Default: "m6i.large"
    Description: Base64 user data to provision the EC2.
    Type: String

  KeyName:
    Default: "openshift-dev"
    Description: Base64 user data to provision the EC2.
    Type: String

  UserData:
    Description: Base64 user data to provision the EC2.
    Type: String

  IsPublic:
    Description: Base64 user data to provision the EC2.
    Type: String
    Default: "False"
    AllowedValues: ["True", "False"]

  Ipv6AddressCount:
    Description: Base64 user data to provision the EC2.
    Type: String
    Default: "0"

Resources:
  #
  # Proxy Deployment
  #
  IamPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: GetObject
      PolicyName: !Join ["-", [!Ref NamePrefix, !Ref NameSuffix]]
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: "Allow"
          Action: "s3:Get*"
          Resource: "*"

  ProxyIamRole:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join ['/', [!Ref TemplatesBaseURL, "00_iam_role.yaml"]]
      TimeoutInMinutes: 5
      Parameters:
        NamePrefix: !Ref NamePrefix
        NameSuffix: "proxy"
        CustomPolicyArns: !Join ["-", [!Ref IamPolicy]]

  ProxySecurityGroup:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join ['/', [!Ref TemplatesBaseURL, "01_vpc_99_security_group.yaml"]]
      TimeoutInMinutes: 5
      Parameters:
        NamePrefix: !Ref NamePrefix
        DescriptionSuffix: "OpenShift Cluster Proxy"
        AllowedProxyCidr: !Ref VpcCidr
        VpcId: !Ref VpcId

  ProxyInstance:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join ['/', [!Ref TemplatesBaseURL, "04_ec2_instance.yaml"]]
      TimeoutInMinutes: 5
      Parameters:
        NamePrefix: !Ref NamePrefix
        AmiId: !Ref AmiId
        SubnetId: !Ref SubnetId
        UserData: !Ref UserData
        IamRoleArn: !GetAtt 'ProxyIamRole.Outputs.IamRoleArn'
        KeyName: !Ref KeyName
        InstanceType: !Ref InstanceType
        SecurityGroupId: !GetAtt 'ProxySecurityGroup.Outputs.SecurityGroupId'
        IsPublic: !Ref IsPublic
        Ipv6AddressCount: !Ref Ipv6AddressCount

Outputs:
  ProxyInstanceId:
    Description: Proxy Instance ID.
    Value: !GetAtt 'ProxyInstance.Outputs.InstanceId'
  ProxyPrivateIp:
    Description: Proxy Private IP.
    Value: !GetAtt 'ProxyInstance.Outputs.PrivateIp'