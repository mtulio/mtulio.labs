AWSTemplateFormatVersion: 2010-09-09
Description: Template for Best Practice Subnets (Public and Private)

Parameters:
  VpcId:
    Description: VPC ID which the subnets will be part.
    Type: String
    AllowedPattern: ^(?:(?:vpc)(?:-[a-zA-Z0-9]+)?\b|(?:[0-9]{1,3}\.){3}[0-9]{1,3})$
    ConstraintDescription: VPC ID must be with valid name, starting with vpc-.*.
  ClusterName:
    Description: Cluster Name or Prefix name to prepend the tag Name for each subnet.
    Type: String
    AllowedPattern: ".+"
    ConstraintDescription: ClusterName parameter must be specified.
  ZoneName:
    Description: Zone Name to create the subnets (Example us-west-2-lax-1a).
    Type: String
    AllowedPattern: ".+"
    ConstraintDescription: ZoneName parameter must be specified.
  PublicRouteTableId:
    Description: Public Route Table ID to associate the public subnet.
    Type: String
    AllowedPattern: ".+"
    ConstraintDescription: PublicRouteTableId parameter must be specified.
  PublicSubnetCidr:
    # yamllint disable-line rule:line-length
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-4]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-24.
    Default: 10.0.128.0/20
    Description: CIDR block for Public Subnet
    Type: String

  PublicSubnetCidrIpv6:
    # # yamllint disable-line rule:line-length
    # AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-4]))$
    # ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-24.
    Default: ""
    Description: IPv6 CIDR block for Public Subnet
    Type: String

  PrivateSubnetCidrIpv6:
    # # yamllint disable-line rule:line-length
    # AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-4]))$
    # ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-24.
    Default: ""
    Description: IPv6 CIDR block for Public Subnet
    Type: String

  PrivateRouteTableId:
    Description: Public Route Table ID to associate the Local Zone subnet
    Type: String
    AllowedPattern: ".+"
    ConstraintDescription: PublicRouteTableId parameter must be specified.
  PrivateSubnetCidr:
    # yamllint disable-line rule:line-length
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-4]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-24.
    Default: 10.0.128.0/20
    Description: CIDR block for Public Subnet
    Type: String

  MapPublicIpOnLaunch:
    Type: String
    Default: "True"
    AllowedValues: ["True", "False"]

Conditions:
  CreateIpv6OnPublicSubnet: !Not [ !Equals [!Ref "PublicSubnetCidrIpv6", ""]]
  CreateIpv6OnPrivateSubnet: !Not [ !Equals [!Ref "PrivateSubnetCidrIpv6", ""]]

Resources:
  PublicSubnet:
    Type: "AWS::EC2::Subnet"
    #Condition: CreateIpv6OnPublicSubnet
    Properties:
      VpcId: !Ref VpcId
      AvailabilityZone: !Ref ZoneName
      CidrBlock: !Ref PublicSubnetCidr
      # Ipv6CidrBlock: !If [ CreateIpv6OnPublicSubnet, !Ref PublicSubnetCidrIpv6, !Ref "AWS::NoValue" ]
      # AssignIpv6AddressOnCreation: !If [ CreateIpv6OnPublicSubnet, True, !Ref "AWS::NoValue" ]
      MapPublicIpOnLaunch: !Ref MapPublicIpOnLaunch
      Tags:
      - Key: Name
        Value: !Join ['-', [!Ref ClusterName, "public", !Ref ZoneName]]

  PublicSubnetRouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTableId

  PrivateSubnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref VpcId
      AvailabilityZone: !Ref ZoneName
      CidrBlock: !Ref PrivateSubnetCidr
      #Ipv6CidrBlock: !If [ CreateIpv6OnPrivateSubnet, !Ref PrivateSubnetCidrIpv6, !Ref "AWS::NoValue" ]
      #AssignIpv6AddressOnCreation: !If [ CreateIpv6OnPrivateSubnet, True, "AWS::NoValue" ]
      MapPublicIpOnLaunch: False
      Tags:
      - Key: Name
        Value: !Join ['-', [!Ref ClusterName, "private", !Ref ZoneName]]

  PrivateSubnetRouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref PrivateSubnet
      RouteTableId: !Ref PrivateRouteTableId

Outputs:
  PublicSubnetId:
    Description: Subnet ID of the public subnets.
    Value:
      !Join ["", [!Ref PublicSubnet]]

  PrivateSubnetId:
    Description: Subnet ID of the private subnets.
    Value:
      !Join ["", [!Ref PrivateSubnet]]
